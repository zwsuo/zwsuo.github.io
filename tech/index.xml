<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on zwsuo&#39;s Blog</title>
    <link>http://zwsuo.github.io/tech/</link>
    <description>Recent content in Tech on zwsuo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 21 Feb 2018 17:31:59 +0800</lastBuildDate>
    
	<atom:link href="http://zwsuo.github.io/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Huge page (大内存页) 到底是个啥</title>
      <link>http://zwsuo.github.io/tech/hugepage/</link>
      <pubDate>Wed, 21 Feb 2018 17:31:59 +0800</pubDate>
      
      <guid>http://zwsuo.github.io/tech/hugepage/</guid>
      <description>Huge page (大内存页) 到底是个啥   学习 Linux 中的大内存页 huge page。理解什么是“大内存页”，如何进行配置，如何查看当前状态以及如何禁用它。
 本文中我们会详细介绍大内存页 huge page ，让你能够回答：Linux 中的“大内存页”是什么？在 RHEL6、RHEL7、Ubuntu 等 Linux 中，如何启用/禁用“大内存页”？如何查看“大内存页”的当前值？
首先让我们从“大内存页”的基础知识开始讲起。
Linux 中的“大内存页”是个什么玩意？
“大内存页”有助于 Linux 系统进行虚拟内存管理。顾名思义，除了标准的 4KB 大小的页面外，它们还能帮助管理内存中的巨大的页面。使用“大内存页”，你最大可以定义 1GB 的页面大小。
在系统启动期间，你能用“大内存页”为应用程序预留一部分内存。这部分内存，即被“大内存页”占用的这些存储器永远不会被交换出内存。它会一直保留其中，除非你修改了配置。这会极大地提高像 Oracle 数据库这样的需要海量内存的应用程序的性能。
为什么使用“大内存页”？
在虚拟内存管理中，内核维护一个将虚拟内存地址映射到物理地址的表，对于每个页面操作，内核都需要加载相关的映射。如果你的内存页很小，那么你需要加载的页就会很多，导致内核会加载更多的映射表。而这会降低性能。
使用“大内存页”，意味着所需要的页变少了。从而大大减少由内核加载的映射表的数量。这提高了内核级别的性能最终有利于应用程序的性能。
简而言之，通过启用“大内存页”，系统具只需要处理较少的页面映射表，从而减少访问/维护它们的开销！
如何配置“大内存页”？
运行下面命令来查看当前“大内存页”的详细内容。
root@kerneltalks # grep Huge /proc/meminfo AnonHugePages: 0 kB HugePages_Total: 0 HugePages_Free: 0 HugePages_Rsvd: 0 HugePages_Surp: 0 Hugepagesize: 2048 kB 从上面输出可以看到，每个页的大小为 2MB（Hugepagesize），并且系统中目前有 0个“大内存页”（HugePages_Total）。这里“大内存页”的大小可以从 2MB 增加到 1GB。
运行下面的脚本可以知道系统当前需要多少个巨大页。该脚本取之于 Oracle。
#!/bin/bash # # hugepages_settings.</description>
    </item>
    
    <item>
      <title>Hugo&#43;Github</title>
      <link>http://zwsuo.github.io/tech/hugo&#43;github/</link>
      <pubDate>Fri, 12 Jan 2018 17:31:59 +0800</pubDate>
      
      <guid>http://zwsuo.github.io/tech/hugo&#43;github/</guid>
      <description>Hugo 配合 Github 实现个人静态博客  一直想弄个稳定、简单、好看的个人博客，记录下自己的思想、感悟、技术，及一些有趣的东西。现在好了，可以使用 Hugo 配合 Github 来完成了。
简单来说，就是使用 Hugo 这个转换引擎将 markdown 文件转为 html 静态资源，然后将静态资源传到 Github 上。
 步骤：
 1. 在 Github 上创建自己的 repo。 2. 在自己电脑上配置好 Hugo。 3. 创建 .md 文件然后使用 Hugo 引擎转换为 html。 4. 上传生成的 html 资源到第一步中的 repo。   详细步骤每一个都很多，就不细述了，因为每一步都有对应的官方文档可以参考，很详细。</description>
    </item>
    
  </channel>
</rss>